name: Push Notification

on:
  push:
    branches: [ develop ]

jobs:
  notify:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 2
        
    - name: Get changed files
      id: changes
      run: |
        echo "changed_files=$(git diff --name-only HEAD^ HEAD)" >> $GITHUB_OUTPUT

        # Get all changed apps dynamically
        CHANGED_APPS_LIST=$(git diff --name-only HEAD^ HEAD | grep '^apps/' | cut -d'/' -f2 | sort -u | tr '\n' ',' | sed 's/,$//')
        echo "changed_apps_list=$CHANGED_APPS_LIST" >> $GITHUB_OUTPUT

        # Check if any apps changed
        if [[ -n "$CHANGED_APPS_LIST" ]]; then
          echo "apps_changed=true" >> $GITHUB_OUTPUT
        else
          echo "apps_changed=false" >> $GITHUB_OUTPUT
        fi
        
    - name: Get commit info
      id: commit
      run: |
        echo "commit_message=$(git log -1 --pretty=format:'%s')" >> $GITHUB_OUTPUT
        echo "commit_author=$(git log -1 --pretty=format:'%an')" >> $GITHUB_OUTPUT
        echo "commit_short_sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
        
    - name: Send Discord notification
      run: |
        # Parse changed apps list
        CHANGED_APPS_LIST="${{ steps.changes.outputs.changed_apps_list }}"
        CHANGED_APPS=""
        APP_COUNT=0

        if [[ "${{ steps.changes.outputs.apps_changed }}" == "true" ]]; then
          IFS=',' read -ra APPS <<< "$CHANGED_APPS_LIST"
          for app in "${APPS[@]}"; do
            case "$app" in
              "app")
                CHANGED_APPS="$CHANGED_APPS\nüì±  **Mobile App**\n     *(Muslimfy App)*\n"
                ;;
              "web")
                CHANGED_APPS="$CHANGED_APPS\nüåê  **Web App**\n     *(Muslimfy Web Application)*\n"
                ;;
              "website")
                CHANGED_APPS="$CHANGED_APPS\nüñ•Ô∏è  **Website**\n     *(Muslimfy Website)*\n"
                ;;
              "browser-extension")
                CHANGED_APPS="$CHANGED_APPS\nüß©  **Browser Extension**\n     *(Muslimfy Browser Extension)*\n"
                ;;
              *)
                CHANGED_APPS="$CHANGED_APPS\nüì¶  **$app**\n     *(Application: $app)*\n"
                ;;
            esac
            APP_COUNT=$((APP_COUNT + 1))
          done
        fi

        # If no apps changed, show generic message
        if [[ -z "$CHANGED_APPS" ]]; then
          CHANGED_APPS="\nüìã  **Project Configuration**\n     *(Build scripts, configs, etc)*"
          APP_COUNT=1
        fi

        # Set title and description based on which apps changed
        if [[ $APP_COUNT == 1 ]]; then
          # Single app changed
          FIRST_APP=$(echo "$CHANGED_APPS_LIST" | cut -d',' -f1)
          case "$FIRST_APP" in
            "app")
              TITLE="üì± ${{ steps.commit.outputs.commit_author }} just pushed"
              DESCRIPTION="Updates pushed to **Muslimfy Mobile App** on develop branch"
              ;;
            "web")
              TITLE="üåê ${{ steps.commit.outputs.commit_author }} just pushed"
              DESCRIPTION="Updates pushed to **Muslimfy Web App** on develop branch"
              ;;
            "website")
              TITLE="üñ•Ô∏è ${{ steps.commit.outputs.commit_author }} just pushed"
              DESCRIPTION="Updates pushed to **Muslimfy Website** on develop branch"
              ;;
            "browser-extension")
              TITLE="üß© ${{ steps.commit.outputs.commit_author }} just pushed"
              DESCRIPTION="Updates pushed to **Muslimfy Browser Extension** on develop branch"
              ;;
            *)
              if [[ -n "$FIRST_APP" ]]; then
                TITLE="üì¶ ${{ steps.commit.outputs.commit_author }} just pushed"
                DESCRIPTION="Updates pushed to **$FIRST_APP** on develop branch"
              else
                TITLE="üìã ${{ steps.commit.outputs.commit_author }} just pushed"
                DESCRIPTION="Updates pushed to **Project Configuration** on develop branch"
              fi
              ;;
          esac
        else
          TITLE="üöÄ ${{ steps.commit.outputs.commit_author }} just pushed"
          DESCRIPTION="Updates pushed to **$APP_COUNT applications** on develop branch"
        fi
        
        curl -H "Content-Type: application/json" \
        -X POST \
        -d "{
          \"embeds\": [
            {
              \"author\": {
                \"name\": \"Kopod Website Development Update\",
                \"icon_url\": \"https://cdn.jsdelivr.net/gh/primer/octicons/icons/code-24.svg\"
              },
              \"title\": \"$TITLE\",
              \"description\": \"$DESCRIPTION\",
              \"color\": 3447003,
              \"fields\": [
                {
                  \"name\": \"üìù What Changed\",
                  \"value\": \"\n> *${{ steps.commit.outputs.commit_message }}*\n\",
                  \"inline\": false
                },
                {
                  \"name\": \"üîó Quick Actions\",
                  \"value\": \"\nüîç [View Commit Details](https://github.com/${{ github.repository }}/commit/${{ github.sha }})\n\nüåø [Browse Source Code](https://github.com/${{ github.repository }}/tree/develop)\n\nüìä [Compare All Changes](https://github.com/${{ github.repository }}/compare/${{ github.sha }}^..${{ github.sha }})\n\",
                  \"inline\": false
                }
              ],
              \"footer\": {
                \"text\": \"Commit ${{ steps.commit.outputs.commit_short_sha }} ‚Ä¢ $(date +'%B %d, %Y at %I:%M %p')\",
                \"icon_url\": \"https://cdn.jsdelivr.net/gh/primer/octicons/icons/git-branch-24.svg\"
              },
              \"timestamp\": \"${{ github.event.head_commit.timestamp }}\"
            }
          ]
        }" \
        https://discord.com/api/webhooks/1417631604423266425/pDfUyIl1B5CK-BO5Nc8yk8E-j1dOiftleR3EQkuDnwrMxyyvZSRIcjLpKyXGLvrOAlg0